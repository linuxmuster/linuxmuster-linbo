#
# default grub.cfg, pxe boot version (placed on server, don't edit!)
# thomas@linuxmuster.net
# 24.03.2016
#

set timeout=0

set gfxmode=auto
set gfxpayload=keep

insmod all_video
insmod png
insmod gfxterm
insmod gfxmenu
insmod minicmd
insmod progress

set font=/boot/grub/fonts/unicode.pf2
if [ -s "$font" ]; then
 loadfont "$font"
fi

terminal_output gfxterm

set color_normal=white/black
set color_highlight=yellow/black
set menu_color_normal=white/black
set menu_color_highlight=yellow/black
set prefix=/boot/grub

# one menu entry does it all
menuentry 'Default' {

 # look for reboot grubenv pipe on server and execute it if present
 set remote_grubenv=$prefix/spool/${net_pxe_hostname}.reboot
 if [ -s "$remote_grubenv" ]; then
  echo -n Loading remote grub environment ...
  load_env -f "$remote_grubenv"
 fi

 # if grub reboot variable is not set from server
 if [ -z "$reboot_grub" ]; then

  # look for it on cache partition
  if search --set root --file /start.conf; then

   # load background image locally if present
   if [ -e "$prefix/linbo_wallpaper.png" ]; then
    set bg_image="$prefix/linbo_wallpaper.png"
    background_image $bg_image
   fi

   # read grub environment variables
   if [ -s /boot/grub/grubenv ]; then
    echo -n Loading local grub environment ...
    load_env
    set localboot=yes
    echo
   fi

  else
   clear
  fi

 fi

 # if reboot is set try to load the os on the given partition
 if [ -n "${reboot_grub}" ]; then

  echo Booting operating system ...
  echo

  set tmproot="${reboot_grub}"
  if [ "$localboot" ]; then
   set reboot_grub=""
   save_env reboot_grub
  fi
  set root="${tmproot}"
  set win_efiloader="/EFI/Microsoft/Boot/bootmgfw.efi"

  if [ -e "$reboot_kernel" -a -e "$reboot_initrd" ]; then
   linux $reboot_kernel $reboot_append
   initrd $reboot_initrd
   boot
  elif [ -e /vmlinuz -a -e /initrd.img ]; then
   linux /vmlinuz $reboot_append
   initrd /initrd.img
   boot
  elif [ -e /vmlinuz -a -e /initrd ]; then
   linux /vmlinuz $reboot_append
   initrd /initrd
   boot
  elif [ -s /boot/grub/grub.cfg ] ; then
   configfile /boot/grub/grub.cfg
  elif [ "$grub_platform" = "pc" ]; then
   if [ -s /bootmgr ] ; then
    ntldr /bootmgr
    boot
   elif [ -s /ntldr ] ; then
    ntldr /ntldr
    boot
   elif [ -s /grldr ] ; then
    ntldr /grldr
    boot
   else
    chainloader +1
    boot
   fi
  elif [ -e "$win_efiloader" ]; then
   chainloader $win_efiloader
   boot
  fi

 fi

 # load local custom.cfg if present
 set customcfg=$prefix/custom.cfg
 if [ -s "$customcfg" ]; then
  configfile $customcfg
 fi

 # finally fallback to netboot if previous boot methods were not successful
 set root="(tftp)"

 # load background image from server if not done locally
 if [ -z "$bg_image" ]; then
  set bg_image="$prefix/linbo_wallpaper.png"
  background_image $bg_image
 fi

 # compute path to group specific config
 if [ "$grub_platform" = "efi" ]; then
  if [ -n "$net_efinet0_extensionspath" ]; then
   set group="$net_efinet0_extensionspath"
  elif [ -n "$net_efinet1_extensionspath" ]; then
   set group="$net_efinet1_extensionspath"
  elif [ -n "$net_efinet2_extensionspath" ]; then
   set group="$net_efinet2_extensionspath"
  fi
 else
  set group="$net_pxe_extensionspath"
 fi
 set grubcfg="$prefix/${group}.cfg"

 # load group specific config from server
 if [ -s "$grubcfg" ]; then
  configfile $grubcfg

 # or netboot linbo directly
 else

  # 32bit or 64bit kernel
  if cpuid -l; then
   set linbo_kernel=/linbo64
   set linbo_initrd=/linbofs64.lz
  else
   set linbo_kernel=/linbo
   set linbo_initrd=/linbofs.lz
  fi
  echo -n "Loading $linbo_kernel .."
  linux $linbo_kernel splash quiet netboot
  echo
  echo -n "Loading $linbo_initrd .."
  initrd $linbo_initrd

 fi

}
